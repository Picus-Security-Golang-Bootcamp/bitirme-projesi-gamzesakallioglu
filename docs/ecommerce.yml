swagger: "2.0"
info:
  description: "This is a sample eCommerce server."
  version: "1.0.0"
  title: "Swagger eCommerce"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "gamzesakallioglu0@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
basePath: "/api/v1"
tags:
  - name: "user"
    description: "Everything about Users"
  - name: "customer"
    description: "Everything about Customers"

schemes:
  - "https"
  - "http"
paths:
  /sing-up:
    post:
      tags:
        - "customer"
      summary: "Add a new customer to the store"
      description: ""
      operationId: "addCustomer"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Customer object that needs to be added to the store"
          required: true
          schema:
            $ref: "#/definitions/Customer"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/CustomerSignUp"
        "405":
          description: "Invalid input"

  /user/sign-up:
    post:
      tags:
        - "user"
      summary: "Create user"
      description: "This can only be done by the logged in user."
      operationId: "createUser"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Created user object"
          required: true
          schema:
            $ref: "#/definitions/UserSignUp"
      responses:
        default:
          description: "successful operation"

  /user/login:
    get:
      tags:
        - "user"
      summary: "Logs user into the system"
      description: ""
      operationId: "loginUser"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: ""
          required: true
          schema:
            $ref: "#/definitions/Login"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "string"
          headers:
            X-Rate-Limit:
              type: "integer"
              format: "int32"
              description: "calls per hour allowed by the user"
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "date in UTC when token expires"
        "400":
          description: "Invalid username/password supplied"

  /login:
    get:
      tags:
        - "user"
      summary: "Logs customer into the system"
      description: ""
      operationId: "loginCustomer"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: ""
          required: true
          schema:
            $ref: "#/definitions/Login"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "string"
          headers:
            X-Rate-Limit:
              type: "integer"
              format: "int32"
              description: "calls per hour allowed by the user"
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "date in UTC when token expires"
        "400":
          description: "Invalid username/password supplied"
  
securityDefinitions:
  ecommerce_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:pets: "modify pets in your account"
      read:pets: "read your pets"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"


definitions:

  Login:
    type: "object"
    required:
      - email
      - password
    properties:
      email:
        type: "string"
      password:
        type: "string"

  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
      message:
        type: "string"
      details:
        description: a (key, value) map.
        type: object

  CustomerSignUp:
    type: "object"
    required:
      - name
      - email
      - password
    properties:
      name:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      address:
        type: "string"
      phone:
        type: "string"

  UserSignUp:
    type: "object"
    required:
      - name
      - email
      - password
    properties:
      name:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      phone:
        type: "string"

  Customer:
    type: "object"
    required:
      - name
      - email
      - password
    properties:
      id:
        type: "string"
      name:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      address:
        type: "string"
      phone:
        type: "string"
      isPassive:
        type: "boolean"

  User:
    type: "object"
    required:
      - name
      - email
      - password
    properties:
      id:
        type: "string"
      name:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      phone:
        type: "string"
      isPassive:
        type: "boolean"
